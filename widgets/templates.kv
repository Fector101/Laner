#:import asynckivy asynckivy


<TypeMapElement>
    id:container
    orientation: "horizontal"
    adaptive_height: True
    spacing: 0

    MDListItem:
        theme_bg_color:"Custom"
        md_bg_color: container.md_bg_color
        on_release: root.func(root.title)
        MDListItemLeadingIcon:
            id: icon
            icon: root.icon
            md_bg_color: "#EDF1F9" if not root.selected else app.theme_cls.primaryColor
            theme_bg_color: "Custom"
        MDListItemHeadlineText:
            text: root.title

        # pos_hint: {"center_x": .5}
        # theme_icon_color: "Custom"
        # icon_color: "white" if root.selected else "black"

    # MDLabel:
    #     text: root.title
    #     pos_hint: {"center_x": .5}
    #     halign: "center"
    #     adaptive_height: True

    # MDIconButton:
    #     id: icon
    #     icon: root.icon
    #     theme_bg_color: "Custom"
    #     md_bg_color: "#EDF1F9" if not root.selected else app.theme_cls.primaryColor
    #     pos_hint: {"center_x": .5}
    #     theme_icon_color: "Custom"
    #     icon_color: "white" if root.selected else "black"
    #     on_release: root.set_active_element(root, root.title.lower())

    # MDLabel:
    #     text: root.title
    #     pos_hint: {"center_x": .5}
    #     halign: "center"
    #     adaptive_height: True


<CustomDropDown>:
    orientation: 'vertical'
    size_hint_y: None
    height: self.minimum_height
    MDBoxLayout:
        size_hint_y: None
        height: dp(50)
        MDLabel:
            text: root.title
            bold: True
            theme_text_color: "Secondary"
        MDIconButton:
            # icon: root.icon
            icon: 'arrow-up' if root.is_open else 'arrow-down'
            theme_bg_color: "Custom"
            pos_hint: {"center_y": .5}
            ripple_scale:0
            on_release: root.toggle_dropdown()

    MDBoxLayout:
        id: dropdown_content
        size_hint_y: None
        height: self.minimum_height if root.is_open else 0
        opacity: 1 if root.is_open else 0


# MDFloatLayout:
<MDTextButton>:
    # size: [text_id.size[0] +20,'50dp']
    adaptive_width:True
    # padding:['50sp',0,'50sp',0]
    MDButtonText:
        id:text_id
        text: root.text
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        # markup: True
    # MDButtonText:
    #     id:btn_text
    #     text: root.text
    #     theme_text_color: 'Custom'
    #     halign: 'center'
    #     valign: 'center'
        # size_hint_x: None
        # width: self.texture_size[0]
    #     text_size: None, None
    #     pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    #     markup: True